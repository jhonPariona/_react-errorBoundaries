{"version":3,"sources":["components/counter.jsx","components/ErrorBoundary.jsx","App.jsx","index.js"],"names":["Counter","React","useState","counter","setCounter","Error","style","border","marginBottom","padding","maxWidth","onClick","ErrorBoundary","state","hasError","eventId","handleReport","Sentry","error","infoError","scope","setTag","setExtras","setState","this","backgroundColor","props","children","Component","App","textAlign","dsn","process","environment","ReactDOM","render","document","getElementById"],"mappings":"mOA4BeA,EA1BC,WAAO,IAAD,EACUC,IAAMC,SAAS,GADzB,mBACbC,EADa,KACJC,EADI,KAOpB,GAAgB,IAAZD,EACF,MAAM,IAAIE,MAAM,0BAGlB,OACE,yBACEC,MAAO,CACLC,OAAQ,kBACRC,aAAc,QACdC,QAAS,SACTC,SAAU,UAGZ,2BAAIP,GACJ,4BAAQQ,QAlBQ,WAClBP,EAAWD,EAAU,KAiBnB,O,uCCwBSS,E,4MA3CbC,MAAQ,CACNC,UAAU,EACVC,QAAS,M,EAkBXC,aAAe,kBAAMC,IAAwB,CAAEF,QAAS,EAAKF,MAAME,W,gEAVjDG,EAAOC,GAAY,IAAD,OAElCF,KAAiB,SAACG,GAChBA,EAAMC,OAAO,QAAS,iBACtBD,EAAME,UAAUH,GAChB,IAAMJ,EAAUE,IAAwBC,GACxC,EAAKK,SAAS,CAAER,iB,+BAUlB,OAFqBS,KAAKX,MAAlBC,SAIJ,6BACE,qDACA,4BACEH,QAASa,KAAKR,aACdV,MAAO,CAAEmB,gBAAiB,WAF5B,sBASCD,KAAKE,MAAMC,Y,kDAhClB,MAAO,CAAEb,UAAU,O,GARKb,IAAM2B,WCsBnBC,EApBH,kBACV,oCACE,4BAAQvB,MAAO,CAAEwB,UAAW,WAC1B,oEAEF,kBAAC,EAAD,KACE,2EACA,kBAAC,EAAD,OAEF,6BACA,uFACA,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,KACE,kBAAC,EAAD,SCdNb,IAAY,CACVc,IAAKC,4EACLC,YAAaD,eAGfE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d2974c22.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Counter = () => {\n  const [counter, setCounter] = React.useState(0);\n\n  const handleClick = () => {\n    setCounter(counter + 1);\n  };\n\n  if (counter === 3) {\n    throw new Error(\"Opss ocurrio un error!\");\n  }\n\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        marginBottom: \"1.5em\",\n        padding: \"0.5rem\",\n        maxWidth: \"15rem\",\n      }}\n    >\n      <p>{counter}</p>\n      <button onClick={handleClick}>+</button>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\n\nclass ErrorBoundary extends React.Component {\n  state = {\n    hasError: false,\n    eventId: null,\n  };\n\n  static getDerivedStateFromError() {\n    // retorna una actualización del estado\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, infoError) {\n    // podemos usar sentry para hacer el registro de errores\n    Sentry.withScope((scope) => {\n      scope.setTag(\"error\", \"ErrorBoundary\");\n      scope.setExtras(infoError);\n      const eventId = Sentry.captureException(error);\n      this.setState({ eventId });\n    });\n  }\n\n  handleReport = () => Sentry.showReportDialog({ eventId: this.state.eventId });\n\n  render() {\n    // destructuring\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <div>\n          <p>Upss! ocurrio un error</p>\n          <button\n            onClick={this.handleReport}\n            style={{ backgroundColor: \"tomato\" }}\n          >\n            Reportar feedback\n          </button>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\n\nimport Counter from \"./components/counter\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nconst App = () => (\n  <>\n    <header style={{ textAlign: \"center\" }}>\n      <h1>Error Boundary / Límite de error</h1>\n    </header>\n    <ErrorBoundary>\n      <p>Componentes encerrados en un limite de error</p>\n      <Counter />\n    </ErrorBoundary>\n    <hr />\n    <p>Componentes indepedientes cada uno en un limite de error</p>\n    <ErrorBoundary>\n      <Counter />\n    </ErrorBoundary>\n    <ErrorBoundary>\n      <Counter />\n    </ErrorBoundary>\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\n\nimport App from \"./App\";\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  environment: process.env.NODE_ENV,\n});\n\nReactDOM.render(<App />, document.getElementById(\"wil\"));\n"],"sourceRoot":""}